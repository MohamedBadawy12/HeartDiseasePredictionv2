@model IEnumerable<Database.Entities.Reciptionist>

@{
    ViewData["Title"] = "Reciptionists List Page";
	Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}
<style>
	.card {
		box-shadow: 0px 4px 8px 0px #7986CB;
	}
</style>
<section class="card card-body bg-light " style="margin:20px">
	<div class="container mt-4">
		<div class="row">
			<div class="col-md-12 offset-md-0">
				<div class="main-body">
					<nav aria-label="breadcrumb" class="main-breadcrumb ">
						<ol class="breadcrumb">
							<li class="breadcrumb-item">Reciptionists</li>
							<li class="breadcrumb-item">List</li>
							<li class="breadcrumb-item active" aria-current="page">List of Reciptionists</li>
						</ol>
					</nav>
				</div>
				<div class="form-inline justify-content-between my-2 my-lg-1 d-flex">
					<a asp-controller="Account" asp-action="RegisterOfReciptionist" class="btn btn-success">
						<i class="fa fa-plus-circle"></i> Add New
					</a>
					<div>
						@using (Html.BeginForm("Index", "Reciptionist", FormMethod.Post))
						{
							@Html.TextBox("search",null,new{@class="form-control",placeholder="Search here...",style="margin:5px 0px 5px 5px"})
							<button class="btn btn-primary" type="submit"><i class="fa fa-search"></i> </button>
						}
					</div>
				</div>
				@if (!Model.Any())
				{
					<div class="alert alert-warning" role="alert">
						No Reciptionists Found
					</div>
				}
				else
				{
					@*<div class="form-inline my-2 my-lg-0 d-flex" style="padding-left:65%">
						@using (Html.BeginForm("Index", "Reciptionist", FormMethod.Post))
						{
							@Html.TextBox("search",null,new{@class="form-control",placeholder="Search here...",style="margin:5px 0px 5px 5px"})
							<button class="btn btn-primary" type="submit"><i class="fa fa-search"></i> Search</button>
						}
					</div>*@
					<table class="table table-hover table-responsive table-striped">
						<thead>
							<tr class="text-center bg-dark text-light">
								<th>#</th>
								<th>Email</th>
								<th>FirstName</th>
								<th>LastName</th>
								@*<th>Gender</th>*@
								<th>Age</th>
								<th>Phone</th>
								<th>
								</th>
								@*@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
							{
							<th>Action</th>
							}*@

							</tr>
						</thead>
						<tbody>
							@foreach (var item in Model)
							{
								<tr>
									@*<td class="align-middle text-center">
							<img class="rounded-circle" src="@item.ProfileImg" alt="@item.FullName" style="max-width:150px">
							</td>*@
									<td class="align-middle text-center counterColumn">
									</td>
									<td class="align-middle text-center">
										@item.User.Email
									</td>
									<td class="align-middle text-center">
										@item.User.FirstName
									</td>
									<td class="align-middle text-center">
										@item.User.LastName
									</td>
									@*<td class="align-middle text-center">
										@item.User.Gender
									</td>*@
									<td class="align-middle text-center">
										@item.User.Age
									</td>
									<td class="align-middle text-center">
										@item.User.PhoneNumber
									</td>
									<td class="align-middle text-center">
										<a class="btn btn-outline-primary" asp-controller="Reciptionist" asp-action="Edit" asp-route-id="@item.Id"><i class="fa fa-pencil-square"></i> Edit</a> |
										<a class="btn btn-outline-info" asp-controller="Reciptionist" asp-action="ReciptionistDetails" asp-route-id="@item.Id"><i class="fa fa-eye"></i> Details</a> |
										<a href="javascript:;" class="btn btn-outline-danger rounded rounded-3 js-delete" data-id="@item.Id"><i class="fa fa-trash"></i> Delete</a>
									</td>
								</tr>
							}
						</tbody>
					</table>
				}
			</div>
		</div>
	</div>
</section>

@section Scripts{
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script>
		$(document).ready(function () {
			$('.js-delete').on('click', function () {
				var btn = $(this);

				const swal = Swal.mixin({
					customClass: {
						confirmButton: 'btn btn-danger mx-2',
						cancelButton: 'btn btn-light'
					},
					buttonsStyling: false
				});

				swal.fire({
					title: 'Are you sure that you need to delete this reciptionist?',
					text: "You won't be able to revert this!",
					icon: 'warning',
					showCancelButton: true,
					confirmButtonText: 'Yes, delete it!',
					cancelButtonText: 'No, cancel!',
					reverseButtons: true
				}).then((result) => {
					if (result.isConfirmed) {
						$.ajax({
							url: `/Reciptionist/Delete/${btn.data('id')}`,
							method: 'DELETE',
							success: function () {
								swal.fire(
									'Deleted!',
									'Reciptionist has been deleted.',
									'success'
								);

								btn.parents('tr').fadeOut();
							},
							error: function () {
								swal.fire(
									'Oooops...',
									'Something went wrong.',
									'error'
								);
							}
						});
					}
				});
			});
		});

		document.addEventListener("DOMContentLoaded", function () {
			var counterCells = document.querySelectorAll(".counterColumn");
			var counter = 1;
			counterCells.forEach(function (cell) {
				cell.textContent = counter++;
			});
		});
	</script>
}