@model List<Database.Entities.Prescription>

@{
    ViewData["Title"] = "Prescriptions List Page";
	Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}
<style>
	.card {
		box-shadow: 0px 4px 8px 0px #7986CB;
	}
</style>
<section class="card card-body bg-light " style="margin:25px 80px">
	<div class="container mt-4">
		<div class="row">
			<div class="col-md-12 offset-md-0">
				<div class="main-body">
					<nav aria-label="breadcrumb" class="main-breadcrumb ">
						<ol class="breadcrumb">
							<li class="breadcrumb-item">Prescriptions</li>
							<li class="breadcrumb-item">List</li>
							<li class="breadcrumb-item active" aria-current="page">List of Prescriptions</li>
						</ol>
					</nav>
				</div>
				<div class="form-inline justify-content-between my-2 my-lg-1 d-flex">
					<div class="modal fade" id="DeleteModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
						<div class="modal-dialog modal-dialog-centered" role="document">
							<div class="modal-content">
								<form id="saveForm" method="post"></form>
								<div class="modal-header">
									<h5 class="modal-title" id="exampleModalLabel">Delete Prescription</h5>
									<button type="button" class="close" data-dismiss="modal" aria-label="Close">
										<span aria-hidden="true">&times;</span>
									</button>
								</div>
								<div class="modal-body">
									<h3>Are you sure to delte this Prescription?</h3>
								</div>
								<div class="modal-footer">
									<button type="button" class="btn btn-secondary btnCancel" data-dismiss="modal">Cancel</button>
									<button id="btnDelete" type="button" class="btn btn-danger ">Delete</button>
								</div>
							</div>
						</div>
					</div>
					<a asp-controller="Prescription" asp-action="Create" class="btn btn-success">
						<i class="fa fa-plus-circle"></i> Add New
					</a>
					<div>
						@using (Html.BeginForm("Index", "Prescription", FormMethod.Post))
						{
							@Html.TextBox("search",null,new{@class="form-control",placeholder="Search here...",style="margin:5px 0px 5px 5px"})
							<button class="btn btn-primary" type="submit"><i class="fa fa-search"></i> </button>
						}
					</div>
				</div>
				<span id="Message" class="d-none">@TempData["Message"]</span>
				@if (!Model.Any())
				{
					<div class="alert alert-warning" role="alert">
						No Prescriptions Found
					</div>
				}
				else
				{
					<input type="hidden" id="PrescriptionId" />
					<table class="table table-hover table-responsive table-striped">
						<thead>
							<tr class="text-center bg-dark text-light">
								<th>#</th>
								@*<th>Medicine Name</th>*@
								<th>Date</th>
								@if (User.Identity.IsAuthenticated && User.IsInRole("User"))
								{
									<th>Doctor</th>
								}
								@if (User.Identity.IsAuthenticated && User.IsInRole("Doctor"))
								{
									<th>Patient</th>
									@*<th>Patient Name</th>*@
								}
								<th>Patient SSN</th>
								<th>
								</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var item in Model)
							{
								<tr>
									<td class="align-middle text-center counterColumn">
									</td>
									@*<td class="align-middle text-center">
										@item.MedicineName
									</td>*@
									<td class="align-middle text-center">
										@item.date.ToString("dd MMM yy")
									</td>
									@if (User.Identity.IsAuthenticated && User.IsInRole("User"))
									{
										<td class="align-middle text-center">
											@item.Doctorr.FirstName @item.Doctorr.LastName
										</td>
									}
									@if (User.Identity.IsAuthenticated && User.IsInRole("Doctor"))
									{
										<td class="align-middle text-center">
											@item.PatientEmail
										</td>
										@*<td class="align-middle text-center">
											@item.Patient.User.FirstName 
										</td>*@
									}
									<td class="align-middle text-center">
										@item.PatientSSN
									</td>
									@if (User.Identity.IsAuthenticated && User.IsInRole("Doctor"))
									{
										<td class="align-middle text-center" style="padding-left:20px">
											<a class="btn btn-outline-primary"  asp-controller="Prescription" asp-action="Edit" asp-route-id="@item.Id"><i class="fa fa-pencil-square"></i> Edit</a> |
											<a class="btn btn-outline-info" asp-controller="Prescription" asp-action="PrescriptionDetails" asp-route-id="@item.Id"><i class="fa fa-eye"></i> Details</a> |
											<a href="javascript:;" class="btn btn-danger rounded rounded-3 js-delete" data-id="@item.Id"><i class="fa fa-trash"></i> Delete</a>
										</td>
									}
									@if (User.Identity.IsAuthenticated && User.IsInRole("User"))
									{
										<td class="align-middle text-center">
											<a class="btn btn-outline-info" asp-controller="Prescription" asp-action="PrescriptionDetails" asp-route-id="@item.Id" ><i class="fa fa-eye"></i> Details</a>
										</td>
									}
								</tr>
							}
						</tbody>
					</table>
				}
			</div>
		</div>
	</div>
</section>
@section Scripts{
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
	<script>
		$(document).ready(function () {
			$('.js-delete').on('click', function () {
				var btn = $(this);

				const swal = Swal.mixin({
					customClass: {
						confirmButton: 'btn btn-danger mx-2',
						cancelButton: 'btn btn-light'
					},
					buttonsStyling: false
				});

				swal.fire({
					title: 'Are you sure that you need to delete this Prescription?',
					text: "You won't be able to revert this!",
					icon: 'warning',
					showCancelButton: true,
					confirmButtonText: 'Yes, delete it!',
					cancelButtonText: 'No, cancel!',
					reverseButtons: true
				}).then((result) => {
					if (result.isConfirmed) {
						$.ajax({
							url: `/Prescription/Delete/${btn.data('id')}`,
							method: 'DELETE',
							success: function () {
								swal.fire(
									'Deleted!',
									'Prescription has been deleted.',
									'success'
								);

								btn.parents('tr').fadeOut();
							},
							error: function () {
								swal.fire(
									'Oooops...',
									'Something went wrong.',
									'error'
								);
							}
						});
					}
				});
			});
		});

		document.addEventListener("DOMContentLoaded", function () {
			var counterCells = document.querySelectorAll(".counterColumn");
			var counter = 1;
			counterCells.forEach(function (cell) {
				cell.textContent = counter++;
			});
		});
	</script>
}